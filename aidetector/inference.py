"""

This module contains the functionality required for inference. 

Imports:
    torch: PyTorch library for tensor computations and neural networks.
    pickle: Standard library for object serialization.


"""
import torch
import pickle

#Returns 1 if AI, 0 if not.
def check_input(model, vocab, text, tokenizer, threshold=0.5):
    """
    Check the input text and determine if it is generated by AI or not.

    Parameters:
    model (nn.Module): The trained PyTorch model for inference.
    vocab (dict): A dictionary mapping tokens to their integer representations.
    text (str): The input text to be checked.
    tokenizer (function): A function used for tokenizing the input text.
    threshold (float, optional): The threshold to determine if the input is AI generated or not. Default is 0.5.

    Returns:
    int: Returns 1 if the input text is determined to be AI generated, else 0.
    """
    
    model.eval()

    user_input = text
    with torch.no_grad():
        tokens = [vocab[token] for token in tokenizer(user_input)]
        sequence = torch.tensor([tokens])
        output = model(sequence)[0]
        ai_probability = torch.sigmoid(output)

    if ai_probability > threshold:
        #it's probably AI
        return 1
    else:
        return 0

def load_vocab(vocabfile):
    """
    Load the vocabulary from a pickle file.

    Parameters:
    vocabfile (str): The file path to the pickle file containing the vocabulary.

    Returns:
    dict: The vocabulary loaded from the file.
    """
    with open(vocabfile, 'rb') as f:
        vocab = pickle.load(f)
    return vocab